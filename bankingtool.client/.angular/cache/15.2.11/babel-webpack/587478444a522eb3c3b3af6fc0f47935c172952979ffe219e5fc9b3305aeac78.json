{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router, localStoreService, emitService, formBuilder) {\n    this.authService = authService;\n    this.router = router;\n    this.localStoreService = localStoreService;\n    this.emitService = emitService;\n    this.formBuilder = formBuilder;\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]]\n    });\n    this.localStoreService.clear();\n  }\n  login() {\n    if (!this.loginForm.invalid) {\n      const loginData = this.loginForm.value;\n      this.authService.login(loginData).subscribe(response => {\n        if (response.status) {\n          this.authService.createToken(response.result).subscribe(result => {\n            if (result.status) {\n              this.localStoreService.setAllData(result.result.claims);\n              this.localStoreService.setItem('accessToken', result.result.accessToken);\n              this.router.navigate([AppRoutes.home]);\n            }\n          });\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAQ,gBAAgB;AAUjD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAMzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAC1DC,iBAAsC,EAAUC,WAA2B,EAC3EC,WAAwB;IAFd,gBAAW,GAAXJ,WAAW;IAAuB,WAAM,GAANC,MAAM;IAClD,sBAAiB,GAAjBC,iBAAiB;IAA+B,gBAAW,GAAXC,WAAW;IAC3D,gBAAW,GAAXC,WAAW;IAPrB,cAAS,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACpCC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC;KACvC,CAAC;IAKA,IAAI,CAACL,iBAAiB,CAACO,KAAK,EAAE;EAChC;EAEAC,KAAK;IACH,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,OAAO,EAAE;MAC3B,MAAMC,SAAS,GAAG,IAAI,CAACF,SAAS,CAACG,KAAK;MACtC,IAAI,CAACd,WAAW,CAACU,KAAK,CAACG,SAAS,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;QAC5D,IAAIA,QAAQ,CAACC,MAAM,EAAE;UACnB,IAAI,CAACjB,WAAW,CAACkB,WAAW,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACJ,SAAS,CAAEI,MAAW,IAAI;YACtE,IAAIA,MAAM,CAACF,MAAM,EAAE;cACjB,IAAI,CAACf,iBAAiB,CAACkB,UAAU,CAACD,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC;cACvD,IAAI,CAACnB,iBAAiB,CAACoB,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACA,MAAM,CAACI,WAAW,CAAC;cACxE,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;UAE1C,CAAC,CAAC;;MAEN,CAAC,CAAC;;EAEN;CACD;AA5BY5B,cAAc,eAL1BF,SAAS,CAAC;EACT+B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW/B,cAAc,CA4B1B;SA5BYA,cAAc","names":["Component","Validators","LoginComponent","constructor","authService","router","localStoreService","emitService","formBuilder","group","email","required","password","clear","login","loginForm","invalid","loginData","value","subscribe","response","status","createToken","result","setAllData","claims","setItem","accessToken","navigate","AppRoutes","home","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\component\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmitterService } from '../../core/emitter.service';\r\nimport { LocalStorageService } from '../../core/local-storage.service';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm = this.formBuilder.group({\n    email: [null, [Validators.required]],\n    password: [null, [Validators.required]],\n  });\n\n  constructor(private authService: AuthService, private router: Router,\n    private localStoreService: LocalStorageService, private emitService: EmitterService,\n    private formBuilder: FormBuilder) {\n    this.localStoreService.clear();\n  }\n\n  login() {\n    if (!this.loginForm.invalid) {\n      const loginData = this.loginForm.value;\n      this.authService.login(loginData).subscribe((response: any) => {\n        if (response.status) {\n          this.authService.createToken(response.result).subscribe((result: any) => {\n            if (result.status) {\n              this.localStoreService.setAllData(result.result.claims);\n              this.localStoreService.setItem('accessToken', result.result.accessToken);\n              this.router.navigate([AppRoutes.home]);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}