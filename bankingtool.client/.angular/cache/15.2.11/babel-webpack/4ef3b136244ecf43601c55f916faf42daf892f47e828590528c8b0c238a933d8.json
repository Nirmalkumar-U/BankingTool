{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_app_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.forecasts = [];\n    this.title = 'bankingtool.client';\n  }\n  ngOnInit() {\n    this.getForecasts();\n  }\n  getForecasts() {\n    this.http.get('/weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => {\n      console.error(error);\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 3,\n      vars: 1,\n      consts: [[4, \"ngIf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"body\");\n          i0.ɵɵelement(1, \"app-navbar\");\n          i0.ɵɵtemplate(2, AppComponent_app_loader_2_Template, 1, 0, \"app-loader\", 0);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\"[_nghost-%COMP%] {\\r\\n    max-width: 1280px;\\r\\n    padding: 2rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    padding-left: 1rem;\\r\\n    padding-right: 1rem;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    margin: 0 auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xyXG4gICAgcGFkZGluZy1yaWdodDogMXJlbTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAEEA,6BAA2C;;;ACa7C,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFjB,cAAS,GAAsB,EAAE;IAmBxC,UAAK,GAAG,oBAAoB;EAjBW;EAEvCC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,IAAI,CAACG,GAAG,CAAoB,kBAAkB,CAAC,CAACC,SAAS,CAC3DC,MAAM,IAAI;MACT,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;;uBAlBWT,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAW;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDfzBhB,4BAAM;UACJA,6BAAyB;UACzBA,2EAA2C;UAC7CA,iBAAO;;;UADQA,eAAe;UAAfA,oCAAe","names":["i0","AppComponent","constructor","http","ngOnInit","getForecasts","get","subscribe","result","forecasts","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\app.component.html","D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\app.component.ts"],"sourcesContent":["<body>\r\n  <app-navbar></app-navbar>\r\n  <app-loader *ngIf=\"isLoading\"></app-loader>\r\n</body>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.getForecasts();\r\n  }\r\n\r\n  getForecasts() {\r\n    this.http.get<WeatherForecast[]>('/weatherforecast').subscribe(\r\n      (result) => {\r\n        this.forecasts = result;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\n  title = 'bankingtool.client';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}