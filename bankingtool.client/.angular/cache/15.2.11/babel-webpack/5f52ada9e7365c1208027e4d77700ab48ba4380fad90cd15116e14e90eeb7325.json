{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { isNullOrEmpty } from '../../core/commonFunction/common-function';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../core/service/user.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditUserComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", state_r3.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(state_r3.value);\n  }\n}\nfunction AddEditUserComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", city_r4.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r4.value);\n  }\n}\nfunction AddEditUserComponent_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r5.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r5.value);\n  }\n}\nexport class AddEditUserComponent {\n  constructor(activatedRoute, fb, userService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.userService = userService;\n    this.stateDropDownList = [];\n    this.cityDropDownList = [];\n    this.roleDropDownList = [];\n    this.userForm = this.fb.group({\n      userId: [],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      role: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const initialData = this.activatedRoute.snapshot.data['DataResolver'];\n    this.stateDropDownList = initialData.result.stateDropDown;\n    this.roleDropDownList = initialData.result.roleDropDown;\n    this.userForm.setValue({\n      userId: initialData.result.userDetail.userId,\n      email: initialData.result.userDetail.emailId,\n      password: initialData.result.userDetail.password,\n      firstName: initialData.result.userDetail.firstName,\n      lastName: initialData.result.userDetail.lastName,\n      state: initialData.result.userDetail.state,\n      city: initialData.result.userDetail.city,\n      role: initialData.result.userDetail.roleId\n    });\n    this.userForm.get('state')?.valueChanges.subscribe(stateValue => {\n      if (stateValue && stateValue != null) {\n        this.userService.getCityDropDownListByStateId(stateValue).subscribe(cityList => {\n          this.cityDropDownList = cityList;\n        });\n      } else {\n        this.cityDropDownList = [];\n      }\n    });\n  }\n  saveUser() {\n    if (!this.userForm.invalid) {\n      let isValid = true;\n      let user = this.userForm.value;\n      if (isNullOrEmpty(user.email)) isValid = false;\n      if (isNullOrEmpty(user.password)) isValid = false;\n      if (isNullOrEmpty(user.firstName)) isValid = false;\n      if (isNullOrEmpty(user.lastName)) isValid = false;\n      if (isNullOrEmpty(user.state)) isValid = false;\n      if (isNullOrEmpty(user.city)) isValid = false;\n      if (isNullOrEmpty(user.role)) isValid = false;\n      if (isValid) {\n        this.userService.saveUser(user).subscribe(cityList => {\n          this.cityDropDownList = cityList;\n        });\n      }\n    }\n  }\n  static {\n    this.ɵfac = function AddEditUserComponent_Factory(t) {\n      return new (t || AddEditUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditUserComponent,\n      selectors: [[\"app-add-edit-user\"]],\n      decls: 52,\n      vars: 5,\n      consts: [[1, \"dashboard-content\"], [1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", 1, \"row\", \"g-3\", \"was-validated\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\"], [1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"for\", \"inputPassword4\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-4\"], [\"for\", \"inputState\", 1, \"form-label\"], [\"id\", \"inputState\", \"formControlName\", \"state\", \"required\", \"\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"inputState\", \"formControlName\", \"city\", \"required\", \"\", 1, \"form-select\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"inputState\", \"formControlName\", \"role\", \"required\", \"\", 1, \"form-select\"], [3, \"ngValue\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n      template: function AddEditUserComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n          i0.ɵɵtext(5, \"Add New User\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function AddEditUserComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.saveUser();\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementStart(12, \"div\", 9);\n          i0.ɵɵtext(13, \" Please Enter EmailId... \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 10);\n          i0.ɵɵtext(16, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 6)(19, \"label\", 7);\n          i0.ɵɵtext(20, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 7);\n          i0.ɵɵtext(24, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 13);\n          i0.ɵɵelementStart(26, \"div\", 9);\n          i0.ɵɵtext(27, \" Please Enter Last Name... \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 14)(29, \"label\", 15);\n          i0.ɵɵtext(30, \"State\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"select\", 16)(32, \"option\", 17);\n          i0.ɵɵtext(33, \"Select\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(34, AddEditUserComponent_option_34_Template, 2, 2, \"option\", 18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 14)(36, \"label\", 15);\n          i0.ɵɵtext(37, \"City\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"select\", 19)(39, \"option\", 17);\n          i0.ɵɵtext(40, \"Select\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(41, AddEditUserComponent_option_41_Template, 2, 2, \"option\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 14)(43, \"label\", 15);\n          i0.ɵɵtext(44, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"select\", 21)(46, \"option\", 22);\n          i0.ɵɵtext(47, \"Select\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(48, AddEditUserComponent_option_48_Template, 2, 2, \"option\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(49, \"div\", 23)(50, \"button\", 24);\n          i0.ɵɵtext(51, \"Save\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngForOf\", ctx.stateDropDownList);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cityDropDownList);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngValue\", \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roleDropDownList);\n        }\n      },\n      dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","isNullOrEmpty","i0","AddEditUserComponent","constructor","activatedRoute","fb","userService","userForm","group","userId","email","required","password","firstName","lastName","state","city","role","ngOnInit","initialData","snapshot","data","stateDropDownList","result","stateDropDown","roleDropDownList","roleDropDown","setValue","userDetail","emailId","roleId","get","valueChanges","subscribe","stateValue","getCityDropDownListByStateId","cityList","cityDropDownList","saveUser","invalid","isValid","user","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\component\\add-edit-user\\add-edit-user.component.ts","D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\component\\add-edit-user\\add-edit-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { isNullOrEmpty } from '../../core/commonFunction/common-function';\r\nimport { UserService } from '../../core/service/user.service';\r\nimport { DropDownDto } from '../../dto/drop-down-dto';\r\nimport { ResponseDto } from '../../dto/response-dto';\r\nimport { SaveUserDto } from '../../dto/save-user-dto';\r\nimport { UserInitialLoadDto } from '../../dto/user-initial-load-dto';\r\n\n@Component({\n  selector: 'app-add-edit-user',\n  templateUrl: './add-edit-user.component.html',\n  styleUrls: ['./add-edit-user.component.css']\n})\nexport class AddEditUserComponent implements OnInit {\n  userForm: FormGroup;\n  stateDropDownList: DropDownDto[] = [];\n  cityDropDownList: DropDownDto[] = [];\n  roleDropDownList: DropDownDto[] = [];\n  constructor(private readonly activatedRoute: ActivatedRoute, private fb: FormBuilder, private userService: UserService) {\n    this.userForm = this.fb.group({\n      userId: [],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      role: ['', [Validators.required]]\n    });\r\n  }\n  ngOnInit() {\r\n    const initialData: ResponseDto<UserInitialLoadDto> = this.activatedRoute.snapshot.data['DataResolver'];\r\n    this.stateDropDownList = initialData.result.stateDropDown;\r\n    this.roleDropDownList = initialData.result.roleDropDown;\r\n\r\n    this.userForm.setValue({\r\n      userId: initialData.result.userDetail.userId,\r\n      email: initialData.result.userDetail.emailId,\r\n      password: initialData.result.userDetail.password,\r\n      firstName: initialData.result.userDetail.firstName,\r\n      lastName: initialData.result.userDetail.lastName,\r\n      state: initialData.result.userDetail.state,\r\n      city: initialData.result.userDetail.city,\r\n      role: initialData.result.userDetail.roleId\r\n    });\r\n\r\n    this.userForm.get('state')?.valueChanges.subscribe(stateValue => {\n      if (stateValue && stateValue != null) {\n        this.userService.getCityDropDownListByStateId(stateValue).subscribe((cityList: DropDownDto[]) => {\n          this.cityDropDownList = cityList;\r\n        });\r\n      } else {\n        this.cityDropDownList = [];\r\n      }\n    });\r\n  }\n\n  saveUser() {\n    if (!this.userForm.invalid) {\r\n      let isValid = true;\r\n      let user: SaveUserDto = this.userForm.value;\r\n      if (isNullOrEmpty(user.email)) isValid = false;\r\n      if (isNullOrEmpty(user.password)) isValid = false;\r\n      if (isNullOrEmpty(user.firstName)) isValid = false;\r\n      if (isNullOrEmpty(user.lastName)) isValid = false;\r\n      if (isNullOrEmpty(user.state)) isValid = false;\r\n      if (isNullOrEmpty(user.city)) isValid = false;\r\n      if (isNullOrEmpty(user.role)) isValid = false;\r\n      if (isValid) {\r\n        this.userService.saveUser(user).subscribe((cityList: DropDownDto[]) => {\n          this.cityDropDownList = cityList;\r\n        });\r\n      }\r\n    }\r\n  }\n}\n","<div class='dashboard-content'>\r\n  <div class='container'>\r\n    <div class='card'>\r\n      <div class='card-header'>\r\n        <h1>Add New User</h1>\r\n      </div>\r\n      <div class='card-body'>\r\n        <form class=\"row g-3 was-validated\" novalidate [formGroup]=\"userForm\" (ngSubmit)=\"saveUser()\">\r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">Email</label>\r\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\" required>\r\n            <div class=\"invalid-feedback\">\r\n              Please Enter EmailId...\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <label for=\"inputPassword4\" class=\"form-label\">Password</label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" required>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">First Name</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" required>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">Last Name</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" required>\r\n            <div class=\"invalid-feedback\">\r\n              Please Enter Last Name...\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label for=\"inputState\" class=\"form-label\">State</label>\r\n            <select id=\"inputState\" class=\"form-select\" formControlName=\"state\" required>\r\n              <option value=\"\">Select</option>\r\n              <option *ngFor=\"let state of stateDropDownList\" value=\"{{state.key}}\">{{ state.value }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label for=\"inputState\" class=\"form-label\">City</label>\r\n            <select id=\"inputState\" class=\"form-select\" formControlName=\"city\" required>\r\n              <option value=\"\">Select</option>\r\n              <option *ngFor=\"let city of cityDropDownList\" [ngValue]=\"city.key\">{{ city.value }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label for=\"inputState\" class=\"form-label\">Role</label>\r\n            <select id=\"inputState\" class=\"form-select\" formControlName=\"role\" required>\r\n              <option [ngValue]=\"''\">Select</option>\r\n              <option *ngFor=\"let role of roleDropDownList\" [ngValue]=\"role.key\">{{ role.value }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}