{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../http/http.service\";\nexport class UserService {\n  constructor(httpService) {\n    this.httpService = httpService;\n  }\n  getUserInitialLoad(userId) {\n    return this.httpService.get('User/GetUserInitialLoad?userId=' + (userId == null ? '' : userId));\n  }\n  getCityDropDownListByStateId(stateId) {\n    return this.httpService.get('User/getCityDropDownListByStateId?stateId=' + stateId);\n  }\n  saveUser(stateId) {\n    return this.httpService.get('User/getCityDropDownListByStateId?stateId=' + stateId);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,kBAAkB,CAACC,MAAqB;IACtC,OAAO,IAAI,CAACF,WAAW,CAACG,GAAG,CAAC,iCAAiC,IAAID,MAAM,IAAI,IAAI,GAAG,EAAE,GAAGA,MAAM,CAAC,CAAC;EACjG;EACAE,4BAA4B,CAACC,OAAe;IAC1C,OAAO,IAAI,CAACL,WAAW,CAACG,GAAG,CAAC,4CAA4C,GAAGE,OAAO,CAAC;EACrF;EACAC,QAAQ,CAACD,OAAe;IACtB,OAAO,IAAI,CAACL,WAAW,CAACG,GAAG,CAAC,4CAA4C,GAAGE,OAAO,CAAC;EACrF;;;uBAXWP,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAS,SAAXT,WAAW;MAAAU,YAFV;IAAM;EAAA","names":["UserService","constructor","httpService","getUserInitialLoad","userId","get","getCityDropDownListByStateId","stateId","saveUser","factory","providedIn"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\core\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { HttpService } from '../http/http.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpService: HttpService) { }\n\n  getUserInitialLoad(userId: number | null): Observable<any> {\r\n    return this.httpService.get('User/GetUserInitialLoad?userId=' + (userId == null ? '' : userId));\r\n  }\r\n  getCityDropDownListByStateId(stateId: number): Observable<any> {\r\n    return this.httpService.get('User/getCityDropDownListByStateId?stateId=' + stateId);\r\n  }\r\n  saveUser(stateId: number): Observable<any> {\r\n    return this.httpService.get('User/getCityDropDownListByStateId?stateId=' + stateId);\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}