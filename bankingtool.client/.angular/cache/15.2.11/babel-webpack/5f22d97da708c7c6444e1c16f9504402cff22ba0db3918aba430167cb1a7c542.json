{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/apiService/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../core/local-storage.service\";\nimport * as i4 from \"../../core/emitter.service\";\nimport * as i5 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(loginService, router, localStoreService, emitService, formBuilder) {\n    this.loginService = loginService;\n    this.router = router;\n    this.localStoreService = localStoreService;\n    this.emitService = emitService;\n    this.formBuilder = formBuilder;\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]]\n    });\n    this.localStoreService.clear();\n  }\n  login() {\n    if (!this.loginForm.invalid) {\n      const loginData = this.loginForm.value;\n      this.loginService.login(loginData).subscribe(response => {\n        if (response.status) {\n          this.loginService.createToken(response.result).subscribe(result => {\n            if (result.status) {\n              this.localStoreService.setAllData(result.result.claims);\n              this.localStoreService.setItem('accessToken', result.result.accessToken);\n              this.router.navigate(['home']);\n            }\n          });\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LocalStorageService), i0.ɵɵdirectiveInject(i4.EmitterService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 26,\n      vars: 1,\n      consts: [[1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"vh-100\"], [1, \"card\", \"text-white\"], [1, \"card-body\"], [1, \"text-center\", \"mb-4\", 2, \"letter-spacing\", \"2px\", \"font-weight\", \"bold\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"text-muted\", 2, \"font-size\", \"0.8rem\"], [1, \"form-group\", \"mb-4\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"text-center\", \"mt-3\"], [\"href\", \"#\", 1, \"text-white-50\", 2, \"text-decoration\", \"none\", \"font-size\", \"0.9rem\"], [1, \"text-center\", \"mt-2\"], [2, \"font-size\", \"0.9rem\"], [\"href\", \"#\", 1, \"text-white\", 2, \"font-weight\", \"500\", \"text-decoration\", \"underline\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Email Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 7);\n          i0.ɵɵelementStart(10, \"small\", 8);\n          i0.ɵɵtext(11, \"We'll never share your email with anyone else.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 12);\n          i0.ɵɵtext(17, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 13)(19, \"a\", 14);\n          i0.ɵɵtext(20, \"Forgot Password?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"p\", 16);\n          i0.ɵɵtext(23, \"Don't have an account? \");\n          i0.ɵɵelementStart(24, \"a\", 17);\n          i0.ɵɵtext(25, \"Sign Up\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        }\n      },\n      dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;AAWxD,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,YAA0B,EAAUC,MAAc,EAC5DC,iBAAsC,EAAUC,WAA2B,EAC3EC,WAAwB;IAFd,iBAAY,GAAZJ,YAAY;IAAwB,WAAM,GAANC,MAAM;IACpD,sBAAiB,GAAjBC,iBAAiB;IAA+B,gBAAW,GAAXC,WAAW;IAC3D,gBAAW,GAAXC,WAAW;IAPrB,cAAS,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACpCC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC;KACvC,CAAC;IAKA,IAAI,CAACL,iBAAiB,CAACO,KAAK,EAAE;EAChC;EAEAC,KAAK;IACH,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,OAAO,EAAE;MAC3B,MAAMC,SAAS,GAAG,IAAI,CAACF,SAAS,CAACG,KAAK;MACtC,IAAI,CAACd,YAAY,CAACU,KAAK,CAACG,SAAS,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;QAC7D,IAAIA,QAAQ,CAACC,MAAM,EAAE;UACnB,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACJ,SAAS,CAAEI,MAAW,IAAI;YACvE,IAAIA,MAAM,CAACF,MAAM,EAAE;cACjB,IAAI,CAACf,iBAAiB,CAACkB,UAAU,CAACD,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC;cACvD,IAAI,CAACnB,iBAAiB,CAACoB,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACA,MAAM,CAACI,WAAW,CAAC;cACxE,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;UAElC,CAAC,CAAC;;MAEN,CAAC,CAAC;;EAEN;;;uBA3BW1B,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAA2B;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCZ3BC,8BAAqE;UAGcA,qBAAK;UAAAA,iBAAK;UACvFA,+BAA8D;UAAxDA;YAAA,OAAYC,WAAO;UAAA,EAAC;UAExBD,8BAA6B;UACWA,6BAAa;UAAAA,iBAAQ;UAC3DA,2BAA4E;UAC5EA,iCAAqD;UAAAA,+DAA8C;UAAAA,iBAAQ;UAG7GA,+BAA6B;UACcA,yBAAQ;UAAAA,iBAAQ;UACzDA,6BAAqF;UACvFA,iBAAM;UAENA,mCAAoD;UAAAA,sBAAK;UAAAA,iBAAS;UAGpEA,gCAA8B;UACwDA,iCAAgB;UAAAA,iBAAI;UAG1GA,gCAA8B;UACEA,wCAAuB;UAAAA,8BAAqF;UAAAA,wBAAO;UAAAA,iBAAI;;;UArB5HA,eAAuB;UAAvBA,yCAAuB","names":["Validators","LoginComponent","constructor","loginService","router","localStoreService","emitService","formBuilder","group","email","required","password","clear","login","loginForm","invalid","loginData","value","subscribe","response","status","createToken","result","setAllData","claims","setItem","accessToken","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\component\\login\\login.component.ts","D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\component\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../../core/apiService/login.service';\r\nimport { EmitterService } from '../../core/emitter.service';\r\nimport { LocalStorageService } from '../../core/local-storage.service';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm = this.formBuilder.group({\n    email: [null, [Validators.required]],\n    password: [null, [Validators.required]],\n  });\n\n  constructor(private loginService: LoginService, private router: Router,\n    private localStoreService: LocalStorageService, private emitService: EmitterService,\n    private formBuilder: FormBuilder) {\n    this.localStoreService.clear();\n  }\n\n  login() {\n    if (!this.loginForm.invalid) {\n      const loginData = this.loginForm.value;\n      this.loginService.login(loginData).subscribe((response: any) => {\n        if (response.status) {\n          this.loginService.createToken(response.result).subscribe((result: any) => {\n            if (result.status) {\n              this.localStoreService.setAllData(result.result.claims);\n              this.localStoreService.setItem('accessToken', result.result.accessToken);\n              this.router.navigate(['home']);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","<div class=\"d-flex align-items-center justify-content-center vh-100\">\r\n  <div class=\"card text-white\">\r\n    <div class=\"card-body\">\r\n      <h2 class=\"text-center mb-4\" style=\"letter-spacing: 2px; font-weight: bold;\">Login</h2>\r\n      <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\r\n        <!-- Email Field -->\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email Address</label>\r\n          <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\">\r\n          <small class=\"text-muted\" style=\"font-size: 0.8rem;\">We'll never share your email with anyone else.</small>\r\n        </div>\r\n        <!-- Password Field -->\r\n        <div class=\"form-group mb-4\">\r\n          <label for=\"password\" class=\"form-label\">Password</label>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">\r\n        </div>\r\n        <!-- Login Button -->\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\r\n      </form>\r\n      <!-- Forgot Password -->\r\n      <div class=\"text-center mt-3\">\r\n        <a href=\"#\" class=\"text-white-50\" style=\"text-decoration: none; font-size: 0.9rem;\">Forgot Password?</a>\r\n      </div>\r\n      <!-- Signup Link -->\r\n      <div class=\"text-center mt-2\">\r\n        <p style=\"font-size: 0.9rem;\">Don't have an account? <a href=\"#\" class=\"text-white\" style=\"font-weight: 500; text-decoration: underline;\">Sign Up</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}