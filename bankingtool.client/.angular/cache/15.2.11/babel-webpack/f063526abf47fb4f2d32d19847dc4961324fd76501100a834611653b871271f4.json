{"ast":null,"code":"import { ClaimKey, Constant } from '../constant/constant';\nimport * as i0 from \"@angular/core\";\nexport class LocalStorageService {\n  constructor() {}\n  getItem(key) {\n    return localStorage.getItem(key);\n  }\n  setItem(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n  removeItem(key) {\n    localStorage.removeItem(key);\n  }\n  clear() {\n    localStorage.clear();\n  }\n  getIsLoggedIn() {\n    return localStorage.getItem(ClaimKey.isLoggedIn) == Constant.true;\n  }\n  setIsLoggedIn(value) {\n    localStorage.setItem(ClaimKey.isLoggedIn, value.toString().toLocaleLowerCase());\n  }\n  setAllData(data) {\n    console.log(data);\n    data.forEach(item => {\n      this.setItem(item.key, item.value);\n    });\n  }\n  static {\n    this.ɵfac = function LocalStorageService_Factory(t) {\n      return new (t || LocalStorageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LocalStorageService,\n      factory: LocalStorageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,sBAAsB;;AAKzD,OAAM,MAAOC,mBAAmB;EAC9BC,eAAgB;EAEhBC,OAAO,CAACC,GAAW;IACjB,OAAOC,YAAY,CAACF,OAAO,CAACC,GAAG,CAAC;EAClC;EACAE,OAAO,CAACF,GAAW,EAAEG,KAAa;IAChCF,YAAY,CAACC,OAAO,CAACF,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,CAAC;EAClD;EACAG,UAAU,CAACN,GAAW;IACpBC,YAAY,CAACK,UAAU,CAACN,GAAG,CAAC;EAC9B;EACAO,KAAK;IACHN,YAAY,CAACM,KAAK,EAAE;EACtB;EACAC,aAAa;IACX,OAAOP,YAAY,CAACF,OAAO,CAACJ,QAAQ,CAACc,UAAU,CAAC,IAAIb,QAAQ,CAACc,IAAI;EACnE;EAEAC,aAAa,CAACR,KAAc;IAC1BF,YAAY,CAACC,OAAO,CAACP,QAAQ,CAACc,UAAU,EAAEN,KAAK,CAACS,QAAQ,EAAE,CAACC,iBAAiB,EAAE,CAAC;EACjF;EACAC,UAAU,CAACC,IAAW;IACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBA,IAAI,CAACG,OAAO,CAAEC,IAAI,IAAI;MACpB,IAAI,CAACjB,OAAO,CAACiB,IAAI,CAACnB,GAAG,EAAEmB,IAAI,CAAChB,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;;;uBA3BWN,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAuB,SAAnBvB,mBAAmB;MAAAwB,YAFlB;IAAM;EAAA","names":["ClaimKey","Constant","LocalStorageService","constructor","getItem","key","localStorage","setItem","value","JSON","stringify","removeItem","clear","getIsLoggedIn","isLoggedIn","true","setIsLoggedIn","toString","toLocaleLowerCase","setAllData","data","console","log","forEach","item","factory","providedIn"],"sourceRoot":"","sources":["D:\\Nirmal Learning Projects\\BankingTool\\bankingtool.client\\src\\app\\core\\local-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ClaimKey, Constant } from '../constant/constant';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  constructor() { }\n\n  getItem(key: string) {\n    return localStorage.getItem(key);\n  }\n  setItem(key: string, value: string) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n  removeItem(key: string) {\n    localStorage.removeItem(key);\n  }\n  clear() {\n    localStorage.clear();\n  }\n  getIsLoggedIn() {\n    return localStorage.getItem(ClaimKey.isLoggedIn) == Constant.true;\n  }\n\n  setIsLoggedIn(value: boolean) {\n    localStorage.setItem(ClaimKey.isLoggedIn, value.toString().toLocaleLowerCase());\n  }\n  setAllData(data: any[]) {\n    console.log(data);\n    data.forEach((item) => {\n      this.setItem(item.key, item.value)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}